name: Deploy to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1  # Shallow clone for faster checkout
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Setup GitHub Actions Cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
            node_modules/.cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      
      - name: Install dependencies
        run: npm ci --no-audit --prefer-offline
      
      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
      
      - name: Build application
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SHADOW_DATABASE_URL: ${{ secrets.SHADOW_DATABASE_URL }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NODE_ENV: production
          
      - name: Run Nextjs standalone output
        run: |
          # Create the standalone output for faster deployment
          cp -r .next/static .next/standalone/.next/
          cp -r public .next/standalone/
      
      - name: Optimize package for deployment
        run: |
          # Remove unnecessary files to reduce package size
          rm -rf .git .github node_modules/.cache
          # Only include production dependencies
          npm prune --production
      
      - name: Deploy to Azure Web App
        id: deploy-to-azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'real-estate-crm-app'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: .next/standalone
          clean: true  # Clean deploy target before deploying
      
      - name: Deployment Status
        run: |
          if [ "${{ steps.deploy-to-azure.outcome }}" == "success" ]; then
            echo "✅ Deployment completed successfully!"
          else
            echo "❌ Deployment failed!"
            exit 1
          fi
